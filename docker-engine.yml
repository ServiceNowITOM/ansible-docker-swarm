# file: docker-engine.yml
---
- hosts: all
  become: yes

  # TODO: Move the docker-engine setup and configuration into a role
  tasks:
    - name: Upgrade base system
      apt:
        update_cache: yes
        cache_valid_time: "{{ apt_cache_valid_time }}"
        upgrade: dist
        force: yes
        state: latest
        
    - name: Install apt-transport-https
      apt: 
        update_cache: yes 
        cache_valid_time: "{{ apt_cache_valid_time }}"
        name: apt-transport-https
        force: yes
        state: latest
    
    - name: Install ca-certificates
      apt: 
        update_cache: yes 
        cache_valid_time: "{{ apt_cache_valid_time }}" 
        name: ca-certificates
        force: yes
        state: latest
        
    - name: Add Docker GPG key
      apt_key:
        id: "{{ docker_gpg_recv_keys }}"
        keyserver: "{{ docker_gpg_key_server }}"
        state: present
        
    - name: Add Docker APT repository
      apt_repository:
        repo: "{{ docker_apt_repo }}"
        update_cache: yes
        state: present
    
    - name: Purge lxc-docker
      apt:
        name: lxc-docker
        purge: yes
        force: yes
        state: absent
        
    - name: Install docker-engine
      apt:
        name: docker-engine
        update_cache: yes 
        cache_valid_time: "{{ apt_cache_valid_time }}" 
        force: yes
        state: latest
        
    - name: Update /etc/defaults/docker
      lineinfile:
        dest: /etc/default/docker
        backup: yes
        regexp: ^#DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4"
        line: DOCKER_OPTS="-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock"
        backrefs: yes
        state: present
      register: result
    
    - name: Restart docker service if required
      service:
        name: docker
        state: restarted
      when: result.changed
               
    - name: Create docker group
      group:
        name: docker
        state: present
        
    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        state: present
    
    - name: Install python pip
      apt:
        name: python-pip
        update_cache: yes
        cache_valid_time: "{{ apt_cache_valid_time }}"
        force: yes
        state: latest
        
    - name: Install docker.py
      pip:
        name: docker-py
        state: latest
        
    - name: Modify grub to adjust memory and swap accounting
      lineinfile:
        dest: /etc/default/grub
        backup: yes
        regexp: GRUB_CMDLINE_LINUX=""$
        line: GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"
        backrefs: yes
        state: present
      register: result
        
    - name: Reboot machine
      shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
      async: 1
      poll: 0
      ignore_errors: true
      when: result.changed
      
    - name: Wait for server boot
      local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300 port=22
      become: no
      when: result.changed      